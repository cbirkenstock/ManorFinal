type Chat @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String
  chatImageUrl: String
  breadCrumb: String
  displayUserName: String
  displayUserProfileImageUrl: String
  displayUserVenmoHandle: String
  eventDateTime: AWSDateTime
  eventDescription: String
  eventLocation: String
  limit: Int
  lastMessage: String
  chatCreator: User @hasOne
  Members: [ChatUser] @hasMany(indexName: "customByChat", fields: ["id"])
  Messages: [Message] @hasMany(indexName: "byChat", fields: ["id"])
  eventChats: [Chat] @hasMany
  isGroupChat: Boolean
  isCoreChat: Boolean
  isCoordinationChat: Boolean
  isEventChat: Boolean
  membersCount: Int
  parentChat1ID: String
  parentChat2ID: String
  editedEventID: String
}

type ChatUser @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userID: ID!
  chatID: ID! @index(name: "customByChat")
  user: User! @belongsTo(fields: ["userID"])
  chat: Chat! @belongsTo(fields: ["chatID"])
  isOfActiveChat: Boolean!
  notificationsEnabled: Boolean!
  nickname: String
  hasUnreadMessage: Boolean
  unreadMessagesCount: Int
  isAdmin: Boolean
  writtenMessages: [Message] @hasMany(indexName: "byChatUser", fields: ["id"])
  messages: [Message] @manyToMany(relationName: "ChatUserMessage")
  profileImageUrl: String
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
  phoneNumber: AWSPhone!
  profileImageUrl: String
  venmoHandle: String
  badgeCount: String
  chats: [ChatUser] @hasMany(fields: ["id"])
  expoPushToken: String
}

type Message @model @auth(rules: [{ allow: public }]) {
  id: ID!
  marginTop: Int
  rerender: Boolean
  isEventMessage: Boolean
  eventChatID: String
  eventTitle: String
  eventDateTime: AWSDateTime
  eventDescription: String
  eventLocation: String
  eventCapacity: Int
  eventMembersCount: Int
  suggestionStatus: String
  messageBody: String
  announcementBody: String
  imageUrl: String
  chatID: ID @index(name: "byChat")
  chatuserID: ID @index(name: "byChatUser")
  chatUsers: [ChatUser] @manyToMany(relationName: "ChatUserMessage")
  likes: Int
  link: AWSURL
  isMandatory: Boolean
  imageHeight: Int
  imageWidth: Int
  isAccepted: Boolean
  dateSuggestion: AWSDateTime
  remindDate: AWSDateTime
}
